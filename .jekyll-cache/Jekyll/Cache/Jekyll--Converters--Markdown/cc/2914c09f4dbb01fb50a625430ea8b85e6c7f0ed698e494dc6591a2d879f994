I"/<p>Simple CTF is a beginner level room on <a href="https://tryhackme.com">TryHackMe</a>. It has few questions that
guide you in which steps have to be done. Here’s my walkthrough on solving that
machine.</p>

<h2 id="enumeration">Enumeration</h2>

<p>First, as always, I started enumerating the system. Here is the output of this
nmap command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sCV</span> &lt;ip-address&gt;
</code></pre></div></div>

<p><img src="img/simpleCTF/nmap.png" alt="nmap" /></p>

<p>With this information I could answer the first two questions.</p>

<ul>
  <li>How many services are running under port 1000?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">2</code></p>
    </blockquote>
  </li>
  <li>What is running on the higher port?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">ssh</code></p>
    </blockquote>
  </li>
</ul>

<p>It has the port 80 open, so I typed the ip in my browser and it displayed the
default’s apache page. I run <strong>gobuster</strong> to find hidden directories in order to
get more clues.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gobuster <span class="nb">dir</span> <span class="nt">-u</span> http://&lt;ip-address&gt; <span class="nt">-x</span> -.txt,.php,.html <span class="nt">-w</span> /usr/share/wordlists/dirb/common.txt <span class="nt">-t</span> 64 <span class="nt">-q</span>
</code></pre></div></div>

<p><img src="img/simpleCTF/gobuster.png" alt="gobuster" /></p>

<p>After fuzzing I found a the <code class="language-plaintext highlighter-rouge">/simple</code> directory, which seems potencially
vulnerable. When I browsed it showed the interface of a CMS called <em>made
simple</em>, and the version of the service was 2.2.8.</p>

<p><img src="img/simpleCTF/made_simple.png" alt="made_simple" /></p>

<p><img src="img/simpleCTF/version.png" alt="version" /></p>

<h2 id="vulnerability-assessment">Vulnerability assessment</h2>

<p>I went to <a href="https://www.exploit-db.com/">exploit DB</a> and search
for exploits for this service. There’s one for that version, and I could
answer the next question:</p>

<p><img src="img/simpleCTF/exploitDB.png" alt="exploitDB" /></p>

<ul>
  <li>What’s the CVE you’re using against the application?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">CVE-2019-9053</code></p>
    </blockquote>
  </li>
  <li>To what kind of vulnerability is the application vulnerable?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">SQLi</code></p>
    </blockquote>
  </li>
</ul>

<p>This exploit is the <code class="language-plaintext highlighter-rouge">46635.py</code> and I tried to run it with this command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python /usr/share/exploitdb/exploits/php/webapps/46635.py <span class="nt">-u</span> http://&lt;ip-address&gt;/simple <span class="nt">--crack</span> <span class="nt">-w</span> /usr/share/seclists/Passwords/Common-Credentials/best110.txt
</code></pre></div></div>

<p>With the parameter <code class="language-plaintext highlighter-rouge">--crack</code> it also outputs the password of the user. The
wordlist I normally use for cracking passwords is the <code class="language-plaintext highlighter-rouge">rockyou.txt</code> as is the
most complete one, but in this case there was a hint in the room recommending to
use the <code class="language-plaintext highlighter-rouge">best110.txt</code>, which would make the process shorter.</p>

<p><img src="img/simpleCTF/exploit.png" alt="exploit" /></p>

<p>At this point I could answer the next two questions:</p>

<ul>
  <li>What’s the password?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">******</code></p>
    </blockquote>
  </li>
  <li>Where can you login with the details obtained?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">ssh</code></p>
    </blockquote>
  </li>
</ul>

<h2 id="gaining-access">Gaining access</h2>

<p>The credentials found by the exploit allow to ssh into the machine, so there was
no need to do anything with the ftp service that was also running.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh <span class="nt">-p</span> 2222 mitch@&lt;ip-address&gt;
</code></pre></div></div>

<p>Being in the machine i was able to answer the next two questions, read the
<code class="language-plaintext highlighter-rouge">user.txt</code> file and find another user with home directory.</p>

<ul>
  <li>What’s the user flag?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">cat user.txt</code></p>
    </blockquote>
  </li>
  <li>Is there any other user in the home directory? What’s its name?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">sunbath</code></p>
    </blockquote>
  </li>
</ul>

<h2 id="privilege-escalation">Privilege escalation</h2>

<p>In order to escalate privileges I tried with <code class="language-plaintext highlighter-rouge">sudo -l</code> and found that was
possible to run vim as root without the password. That’s an easy one, so in vim
as root I executed the command <code class="language-plaintext highlighter-rouge">:!sh</code> and immediately had a root shell. I could
read the root flag and answer the last questions to complete the room.</p>

<p><img src="img/simpleCTF/root.png" alt="ssh" /></p>

<ul>
  <li>What can you leverage to spawn a privileged shell?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">vim</code></p>
    </blockquote>
  </li>
  <li>What’s the root flag?
    <blockquote>
      <p>Answer: <code class="language-plaintext highlighter-rouge">cat root.txt</code></p>
    </blockquote>
  </li>
</ul>

<h2 id="alternatives">Alternatives</h2>

<p>Another way to solve this room would have been looking into the ftp server.
There’s a file that shows that there’s another user called mitch, and it was
possible to get its password using <strong>Hydra</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hydra <span class="nt">-l</span> mitch <span class="nt">-P</span> /usr/share/wordlists/rockyou.txt &lt;ip-address&gt; <span class="nt">-s</span> 2222 <span class="nt">-t</span> 4 ssh
</code></pre></div></div>

<p><img src="img/simpleCTF/hydra.png" alt="hydra" /></p>
:ET